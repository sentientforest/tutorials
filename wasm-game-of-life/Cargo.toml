[package]
name = "wasm-game-of-life"
version = "0.1.0"
authors = ["Michael Graham <michael@forested.earth>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
js-sys = "0.3.44"
fixedbitset = "0.3.0"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

# https://users.rust-lang.org/t/unexpected-wasm-opt-crash-when-running-wasm-pack/46573
# https://github.com/rustwasm/wasm-pack/issues/886
# 2020-08-14 - bug in wasm-pack causes:
# [wasm-validator error in module] unexpected true: Exported global cannot be mutable, onglobal
# wasm-pack build --dev works, or below to temporarily disable wasm-opt
# at https://rustwasm.github.io/book/game-of-life/implementing.html
[package.metadata.wasm-pack.profile.release]
wasm-opt = false
